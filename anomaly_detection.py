{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt #its our grafing library\n",
    "import numpy as np # helps us turn things to dataframe\n",
    "%matplotlib inline\n",
    "from sklearn import datasets, ensemble\n",
    "# bcus ensemble alglorithm will be used to detect anomilies\n",
    "cancer_data = datasets.load_breast_cancer()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'feature_names': array(['mean radius', 'mean texture', 'mean perimeter', 'mean area',\n",
      "       'mean smoothness', 'mean compactness', 'mean concavity',\n",
      "       'mean concave points', 'mean symmetry', 'mean fractal dimension',\n",
      "       'radius error', 'texture error', 'perimeter error', 'area error',\n",
      "       'smoothness error', 'compactness error', 'concavity error',\n",
      "       'concave points error', 'symmetry error',\n",
      "       'fractal dimension error', 'worst radius', 'worst texture',\n",
      "       'worst perimeter', 'worst area', 'worst smoothness',\n",
      "       'worst compactness', 'worst concavity', 'worst concave points',\n",
      "       'worst symmetry', 'worst fractal dimension'], dtype='<U23'), 'DESCR': '.. _breast_cancer_dataset:\\n\\nBreast cancer wisconsin (diagnostic) dataset\\n--------------------------------------------\\n\\n**Data Set Characteristics:**\\n\\n    :Number of Instances: 569\\n\\n    :Number of Attributes: 30 numeric, predictive attributes and the class\\n\\n    :Attribute Information:\\n        - radius (mean of distances from center to points on the perimeter)\\n        - texture (standard deviation of gray-scale values)\\n        - perimeter\\n        - area\\n        - smoothness (local variation in radius lengths)\\n        - compactness (perimeter^2 / area - 1.0)\\n        - concavity (severity of concave portions of the contour)\\n        - concave points (number of concave portions of the contour)\\n        - symmetry \\n        - fractal dimension (\"coastline approximation\" - 1)\\n\\n        The mean, standard error, and \"worst\" or largest (mean of the three\\n        largest values) of these features were computed for each image,\\n        resulting in 30 features.  For instance, field 3 is Mean Radius, field\\n        13 is Radius SE, field 23 is Worst Radius.\\n\\n        - class:\\n                - WDBC-Malignant\\n                - WDBC-Benign\\n\\n    :Summary Statistics:\\n\\n    ===================================== ====== ======\\n                                           Min    Max\\n    ===================================== ====== ======\\n    radius (mean):                        6.981  28.11\\n    texture (mean):                       9.71   39.28\\n    perimeter (mean):                     43.79  188.5\\n    area (mean):                          143.5  2501.0\\n    smoothness (mean):                    0.053  0.163\\n    compactness (mean):                   0.019  0.345\\n    concavity (mean):                     0.0    0.427\\n    concave points (mean):                0.0    0.201\\n    symmetry (mean):                      0.106  0.304\\n    fractal dimension (mean):             0.05   0.097\\n    radius (standard error):              0.112  2.873\\n    texture (standard error):             0.36   4.885\\n    perimeter (standard error):           0.757  21.98\\n    area (standard error):                6.802  542.2\\n    smoothness (standard error):          0.002  0.031\\n    compactness (standard error):         0.002  0.135\\n    concavity (standard error):           0.0    0.396\\n    concave points (standard error):      0.0    0.053\\n    symmetry (standard error):            0.008  0.079\\n    fractal dimension (standard error):   0.001  0.03\\n    radius (worst):                       7.93   36.04\\n    texture (worst):                      12.02  49.54\\n    perimeter (worst):                    50.41  251.2\\n    area (worst):                         185.2  4254.0\\n    smoothness (worst):                   0.071  0.223\\n    compactness (worst):                  0.027  1.058\\n    concavity (worst):                    0.0    1.252\\n    concave points (worst):               0.0    0.291\\n    symmetry (worst):                     0.156  0.664\\n    fractal dimension (worst):            0.055  0.208\\n    ===================================== ====== ======\\n\\n    :Missing Attribute Values: None\\n\\n    :Class Distribution: 212 - Malignant, 357 - Benign\\n\\n    :Creator:  Dr. William H. Wolberg, W. Nick Street, Olvi L. Mangasarian\\n\\n    :Donor: Nick Street\\n\\n    :Date: November, 1995\\n\\nThis is a copy of UCI ML Breast Cancer Wisconsin (Diagnostic) datasets.\\nhttps://goo.gl/U2Uwz2\\n\\nFeatures are computed from a digitized image of a fine needle\\naspirate (FNA) of a breast mass.  They describe\\ncharacteristics of the cell nuclei present in the image.\\n\\nSeparating plane described above was obtained using\\nMultisurface Method-Tree (MSM-T) [K. P. Bennett, \"Decision Tree\\nConstruction Via Linear Programming.\" Proceedings of the 4th\\nMidwest Artificial Intelligence and Cognitive Science Society,\\npp. 97-101, 1992], a classification method which uses linear\\nprogramming to construct a decision tree.  Relevant features\\nwere selected using an exhaustive search in the space of 1-4\\nfeatures and 1-3 separating planes.\\n\\nThe actual linear program used to obtain the separating plane\\nin the 3-dimensional space is that described in:\\n[K. P. Bennett and O. L. Mangasarian: \"Robust Linear\\nProgramming Discrimination of Two Linearly Inseparable Sets\",\\nOptimization Methods and Software 1, 1992, 23-34].\\n\\nThis database is also available through the UW CS ftp server:\\n\\nftp ftp.cs.wisc.edu\\ncd math-prog/cpo-dataset/machine-learn/WDBC/\\n\\n.. topic:: References\\n\\n   - W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction \\n     for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on \\n     Electronic Imaging: Science and Technology, volume 1905, pages 861-870,\\n     San Jose, CA, 1993.\\n   - O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and \\n     prognosis via linear programming. Operations Research, 43(4), pages 570-577, \\n     July-August 1995.\\n   - W.H. Wolberg, W.N. Street, and O.L. Mangasarian. Machine learning techniques\\n     to diagnose breast cancer from fine-needle aspirates. Cancer Letters 77 (1994) \\n     163-171.', 'filename': 'C:\\\\Users\\\\USER\\\\Anaconda3\\\\lib\\\\site-packages\\\\sklearn\\\\datasets\\\\data\\\\breast_cancer.csv', 'target_names': array(['malignant', 'benign'], dtype='<U9'), 'target': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n",
      "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n",
      "       0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,\n",
      "       1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,\n",
      "       1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
      "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
      "       0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
      "       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n",
      "       1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0,\n",
      "       0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0,\n",
      "       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n",
      "       1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
      "       0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1,\n",
      "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
      "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0,\n",
      "       0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
      "       0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n",
      "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n",
      "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
      "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
      "       1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
      "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
      "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1,\n",
      "       1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
      "       1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
      "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]), 'data': array([[1.799e+01, 1.038e+01, 1.228e+02, ..., 2.654e-01, 4.601e-01,\n",
      "        1.189e-01],\n",
      "       [2.057e+01, 1.777e+01, 1.329e+02, ..., 1.860e-01, 2.750e-01,\n",
      "        8.902e-02],\n",
      "       [1.969e+01, 2.125e+01, 1.300e+02, ..., 2.430e-01, 3.613e-01,\n",
      "        8.758e-02],\n",
      "       ...,\n",
      "       [1.660e+01, 2.808e+01, 1.083e+02, ..., 1.418e-01, 2.218e-01,\n",
      "        7.820e-02],\n",
      "       [2.060e+01, 2.933e+01, 1.401e+02, ..., 2.650e-01, 4.087e-01,\n",
      "        1.240e-01],\n",
      "       [7.760e+00, 2.454e+01, 4.792e+01, ..., 0.000e+00, 2.871e-01,\n",
      "        7.039e-02]])}\n"
     ]
    }
   ],
   "source": [
    "print(cancer_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "feature_names\n",
      "DESCR\n",
      "filename\n",
      "target_names\n",
      "target\n",
      "data\n"
     ]
    }
   ],
   "source": [
    "#lets loop through the keys we notice thats its a dictionary in cancer data\n",
    "for key in cancer_data:\n",
    "    print(key)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.799e+01, 1.038e+01, 1.228e+02, ..., 2.654e-01, 4.601e-01,\n",
       "        1.189e-01],\n",
       "       [2.057e+01, 1.777e+01, 1.329e+02, ..., 1.860e-01, 2.750e-01,\n",
       "        8.902e-02],\n",
       "       [1.969e+01, 2.125e+01, 1.300e+02, ..., 2.430e-01, 3.613e-01,\n",
       "        8.758e-02],\n",
       "       ...,\n",
       "       [1.660e+01, 2.808e+01, 1.083e+02, ..., 1.418e-01, 2.218e-01,\n",
       "        7.820e-02],\n",
       "       [2.060e+01, 2.933e+01, 1.401e+02, ..., 2.650e-01, 4.087e-01,\n",
       "        1.240e-01],\n",
       "       [7.760e+00, 2.454e+01, 4.792e+01, ..., 0.000e+00, 2.871e-01,\n",
       "        7.039e-02]])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cancer_data.data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(569, 30)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cancer_data.data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['mean radius', 'mean texture', 'mean perimeter', 'mean area',\n",
       "       'mean smoothness', 'mean compactness', 'mean concavity',\n",
       "       'mean concave points', 'mean symmetry', 'mean fractal dimension',\n",
       "       'radius error', 'texture error', 'perimeter error', 'area error',\n",
       "       'smoothness error', 'compactness error', 'concavity error',\n",
       "       'concave points error', 'symmetry error',\n",
       "       'fractal dimension error', 'worst radius', 'worst texture',\n",
       "       'worst perimeter', 'worst area', 'worst smoothness',\n",
       "       'worst compactness', 'worst concavity', 'worst concave points',\n",
       "       'worst symmetry', 'worst fractal dimension'], dtype='<U23')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cancer_data.feature_names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(30,)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cancer_data.feature_names.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,\n",
       "       1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,\n",
       "       1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
       "       0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n",
       "       1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0,\n",
       "       0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0,\n",
       "       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n",
       "       1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0,\n",
       "       0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
       "       0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n",
       "       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n",
       "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
       "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
       "       1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
       "       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
       "       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1,\n",
       "       1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cancer_data.target"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(569,)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cancer_data.target.shape\n",
    "#target values will be used for graphing purposes and the feature data to detect outliers anomalies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ".. _breast_cancer_dataset:\n",
      "\n",
      "Breast cancer wisconsin (diagnostic) dataset\n",
      "--------------------------------------------\n",
      "\n",
      "**Data Set Characteristics:**\n",
      "\n",
      "    :Number of Instances: 569\n",
      "\n",
      "    :Number of Attributes: 30 numeric, predictive attributes and the class\n",
      "\n",
      "    :Attribute Information:\n",
      "        - radius (mean of distances from center to points on the perimeter)\n",
      "        - texture (standard deviation of gray-scale values)\n",
      "        - perimeter\n",
      "        - area\n",
      "        - smoothness (local variation in radius lengths)\n",
      "        - compactness (perimeter^2 / area - 1.0)\n",
      "        - concavity (severity of concave portions of the contour)\n",
      "        - concave points (number of concave portions of the contour)\n",
      "        - symmetry \n",
      "        - fractal dimension (\"coastline approximation\" - 1)\n",
      "\n",
      "        The mean, standard error, and \"worst\" or largest (mean of the three\n",
      "        largest values) of these features were computed for each image,\n",
      "        resulting in 30 features.  For instance, field 3 is Mean Radius, field\n",
      "        13 is Radius SE, field 23 is Worst Radius.\n",
      "\n",
      "        - class:\n",
      "                - WDBC-Malignant\n",
      "                - WDBC-Benign\n",
      "\n",
      "    :Summary Statistics:\n",
      "\n",
      "    ===================================== ====== ======\n",
      "                                           Min    Max\n",
      "    ===================================== ====== ======\n",
      "    radius (mean):                        6.981  28.11\n",
      "    texture (mean):                       9.71   39.28\n",
      "    perimeter (mean):                     43.79  188.5\n",
      "    area (mean):                          143.5  2501.0\n",
      "    smoothness (mean):                    0.053  0.163\n",
      "    compactness (mean):                   0.019  0.345\n",
      "    concavity (mean):                     0.0    0.427\n",
      "    concave points (mean):                0.0    0.201\n",
      "    symmetry (mean):                      0.106  0.304\n",
      "    fractal dimension (mean):             0.05   0.097\n",
      "    radius (standard error):              0.112  2.873\n",
      "    texture (standard error):             0.36   4.885\n",
      "    perimeter (standard error):           0.757  21.98\n",
      "    area (standard error):                6.802  542.2\n",
      "    smoothness (standard error):          0.002  0.031\n",
      "    compactness (standard error):         0.002  0.135\n",
      "    concavity (standard error):           0.0    0.396\n",
      "    concave points (standard error):      0.0    0.053\n",
      "    symmetry (standard error):            0.008  0.079\n",
      "    fractal dimension (standard error):   0.001  0.03\n",
      "    radius (worst):                       7.93   36.04\n",
      "    texture (worst):                      12.02  49.54\n",
      "    perimeter (worst):                    50.41  251.2\n",
      "    area (worst):                         185.2  4254.0\n",
      "    smoothness (worst):                   0.071  0.223\n",
      "    compactness (worst):                  0.027  1.058\n",
      "    concavity (worst):                    0.0    1.252\n",
      "    concave points (worst):               0.0    0.291\n",
      "    symmetry (worst):                     0.156  0.664\n",
      "    fractal dimension (worst):            0.055  0.208\n",
      "    ===================================== ====== ======\n",
      "\n",
      "    :Missing Attribute Values: None\n",
      "\n",
      "    :Class Distribution: 212 - Malignant, 357 - Benign\n",
      "\n",
      "    :Creator:  Dr. William H. Wolberg, W. Nick Street, Olvi L. Mangasarian\n",
      "\n",
      "    :Donor: Nick Street\n",
      "\n",
      "    :Date: November, 1995\n",
      "\n",
      "This is a copy of UCI ML Breast Cancer Wisconsin (Diagnostic) datasets.\n",
      "https://goo.gl/U2Uwz2\n",
      "\n",
      "Features are computed from a digitized image of a fine needle\n",
      "aspirate (FNA) of a breast mass.  They describe\n",
      "characteristics of the cell nuclei present in the image.\n",
      "\n",
      "Separating plane described above was obtained using\n",
      "Multisurface Method-Tree (MSM-T) [K. P. Bennett, \"Decision Tree\n",
      "Construction Via Linear Programming.\" Proceedings of the 4th\n",
      "Midwest Artificial Intelligence and Cognitive Science Society,\n",
      "pp. 97-101, 1992], a classification method which uses linear\n",
      "programming to construct a decision tree.  Relevant features\n",
      "were selected using an exhaustive search in the space of 1-4\n",
      "features and 1-3 separating planes.\n",
      "\n",
      "The actual linear program used to obtain the separating plane\n",
      "in the 3-dimensional space is that described in:\n",
      "[K. P. Bennett and O. L. Mangasarian: \"Robust Linear\n",
      "Programming Discrimination of Two Linearly Inseparable Sets\",\n",
      "Optimization Methods and Software 1, 1992, 23-34].\n",
      "\n",
      "This database is also available through the UW CS ftp server:\n",
      "\n",
      "ftp ftp.cs.wisc.edu\n",
      "cd math-prog/cpo-dataset/machine-learn/WDBC/\n",
      "\n",
      ".. topic:: References\n",
      "\n",
      "   - W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction \n",
      "     for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on \n",
      "     Electronic Imaging: Science and Technology, volume 1905, pages 861-870,\n",
      "     San Jose, CA, 1993.\n",
      "   - O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and \n",
      "     prognosis via linear programming. Operations Research, 43(4), pages 570-577, \n",
      "     July-August 1995.\n",
      "   - W.H. Wolberg, W.N. Street, and O.L. Mangasarian. Machine learning techniques\n",
      "     to diagnose breast cancer from fine-needle aspirates. Cancer Letters 77 (1994) \n",
      "     163-171.\n"
     ]
    }
   ],
   "source": [
    "print(cancer_data.DESCR)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n",
      "0         17.990         10.38          122.80     1001.0          0.11840   \n",
      "1         20.570         17.77          132.90     1326.0          0.08474   \n",
      "2         19.690         21.25          130.00     1203.0          0.10960   \n",
      "3         11.420         20.38           77.58      386.1          0.14250   \n",
      "4         20.290         14.34          135.10     1297.0          0.10030   \n",
      "5         12.450         15.70           82.57      477.1          0.12780   \n",
      "6         18.250         19.98          119.60     1040.0          0.09463   \n",
      "7         13.710         20.83           90.20      577.9          0.11890   \n",
      "8         13.000         21.82           87.50      519.8          0.12730   \n",
      "9         12.460         24.04           83.97      475.9          0.11860   \n",
      "10        16.020         23.24          102.70      797.8          0.08206   \n",
      "11        15.780         17.89          103.60      781.0          0.09710   \n",
      "12        19.170         24.80          132.40     1123.0          0.09740   \n",
      "13        15.850         23.95          103.70      782.7          0.08401   \n",
      "14        13.730         22.61           93.60      578.3          0.11310   \n",
      "15        14.540         27.54           96.73      658.8          0.11390   \n",
      "16        14.680         20.13           94.74      684.5          0.09867   \n",
      "17        16.130         20.68          108.10      798.8          0.11700   \n",
      "18        19.810         22.15          130.00     1260.0          0.09831   \n",
      "19        13.540         14.36           87.46      566.3          0.09779   \n",
      "20        13.080         15.71           85.63      520.0          0.10750   \n",
      "21         9.504         12.44           60.34      273.9          0.10240   \n",
      "22        15.340         14.26          102.50      704.4          0.10730   \n",
      "23        21.160         23.04          137.20     1404.0          0.09428   \n",
      "24        16.650         21.38          110.00      904.6          0.11210   \n",
      "25        17.140         16.40          116.00      912.7          0.11860   \n",
      "26        14.580         21.53           97.41      644.8          0.10540   \n",
      "27        18.610         20.25          122.10     1094.0          0.09440   \n",
      "28        15.300         25.27          102.40      732.4          0.10820   \n",
      "29        17.570         15.05          115.00      955.1          0.09847   \n",
      "..           ...           ...             ...        ...              ...   \n",
      "539        7.691         25.44           48.34      170.4          0.08668   \n",
      "540       11.540         14.44           74.65      402.9          0.09984   \n",
      "541       14.470         24.99           95.81      656.4          0.08837   \n",
      "542       14.740         25.42           94.70      668.6          0.08275   \n",
      "543       13.210         28.06           84.88      538.4          0.08671   \n",
      "544       13.870         20.70           89.77      584.8          0.09578   \n",
      "545       13.620         23.23           87.19      573.2          0.09246   \n",
      "546       10.320         16.35           65.31      324.9          0.09434   \n",
      "547       10.260         16.58           65.85      320.8          0.08877   \n",
      "548        9.683         19.34           61.05      285.7          0.08491   \n",
      "549       10.820         24.21           68.89      361.6          0.08192   \n",
      "550       10.860         21.48           68.51      360.5          0.07431   \n",
      "551       11.130         22.44           71.49      378.4          0.09566   \n",
      "552       12.770         29.43           81.35      507.9          0.08276   \n",
      "553        9.333         21.94           59.01      264.0          0.09240   \n",
      "554       12.880         28.92           82.50      514.3          0.08123   \n",
      "555       10.290         27.61           65.67      321.4          0.09030   \n",
      "556       10.160         19.59           64.73      311.7          0.10030   \n",
      "557        9.423         27.88           59.26      271.3          0.08123   \n",
      "558       14.590         22.68           96.39      657.1          0.08473   \n",
      "559       11.510         23.93           74.52      403.5          0.09261   \n",
      "560       14.050         27.15           91.38      600.4          0.09929   \n",
      "561       11.200         29.37           70.67      386.0          0.07449   \n",
      "562       15.220         30.62          103.40      716.9          0.10480   \n",
      "563       20.920         25.09          143.00     1347.0          0.10990   \n",
      "564       21.560         22.39          142.00     1479.0          0.11100   \n",
      "565       20.130         28.25          131.20     1261.0          0.09780   \n",
      "566       16.600         28.08          108.30      858.1          0.08455   \n",
      "567       20.600         29.33          140.10     1265.0          0.11780   \n",
      "568        7.760         24.54           47.92      181.0          0.05263   \n",
      "\n",
      "     mean compactness  mean concavity  mean concave points  mean symmetry  \\\n",
      "0             0.27760        0.300100             0.147100         0.2419   \n",
      "1             0.07864        0.086900             0.070170         0.1812   \n",
      "2             0.15990        0.197400             0.127900         0.2069   \n",
      "3             0.28390        0.241400             0.105200         0.2597   \n",
      "4             0.13280        0.198000             0.104300         0.1809   \n",
      "5             0.17000        0.157800             0.080890         0.2087   \n",
      "6             0.10900        0.112700             0.074000         0.1794   \n",
      "7             0.16450        0.093660             0.059850         0.2196   \n",
      "8             0.19320        0.185900             0.093530         0.2350   \n",
      "9             0.23960        0.227300             0.085430         0.2030   \n",
      "10            0.06669        0.032990             0.033230         0.1528   \n",
      "11            0.12920        0.099540             0.066060         0.1842   \n",
      "12            0.24580        0.206500             0.111800         0.2397   \n",
      "13            0.10020        0.099380             0.053640         0.1847   \n",
      "14            0.22930        0.212800             0.080250         0.2069   \n",
      "15            0.15950        0.163900             0.073640         0.2303   \n",
      "16            0.07200        0.073950             0.052590         0.1586   \n",
      "17            0.20220        0.172200             0.102800         0.2164   \n",
      "18            0.10270        0.147900             0.094980         0.1582   \n",
      "19            0.08129        0.066640             0.047810         0.1885   \n",
      "20            0.12700        0.045680             0.031100         0.1967   \n",
      "21            0.06492        0.029560             0.020760         0.1815   \n",
      "22            0.21350        0.207700             0.097560         0.2521   \n",
      "23            0.10220        0.109700             0.086320         0.1769   \n",
      "24            0.14570        0.152500             0.091700         0.1995   \n",
      "25            0.22760        0.222900             0.140100         0.3040   \n",
      "26            0.18680        0.142500             0.087830         0.2252   \n",
      "27            0.10660        0.149000             0.077310         0.1697   \n",
      "28            0.16970        0.168300             0.087510         0.1926   \n",
      "29            0.11570        0.098750             0.079530         0.1739   \n",
      "..                ...             ...                  ...            ...   \n",
      "539           0.11990        0.092520             0.013640         0.2037   \n",
      "540           0.11200        0.067370             0.025940         0.1818   \n",
      "541           0.12300        0.100900             0.038900         0.1872   \n",
      "542           0.07214        0.041050             0.030270         0.1840   \n",
      "543           0.06877        0.029870             0.032750         0.1628   \n",
      "544           0.10180        0.036880             0.023690         0.1620   \n",
      "545           0.06747        0.029740             0.024430         0.1664   \n",
      "546           0.04994        0.010120             0.005495         0.1885   \n",
      "547           0.08066        0.043580             0.024380         0.1669   \n",
      "548           0.05030        0.023370             0.009615         0.1580   \n",
      "549           0.06602        0.015480             0.008160         0.1976   \n",
      "550           0.04227        0.000000             0.000000         0.1661   \n",
      "551           0.08194        0.048240             0.022570         0.2030   \n",
      "552           0.04234        0.019970             0.014990         0.1539   \n",
      "553           0.05605        0.039960             0.012820         0.1692   \n",
      "554           0.05824        0.061950             0.023430         0.1566   \n",
      "555           0.07658        0.059990             0.027380         0.1593   \n",
      "556           0.07504        0.005025             0.011160         0.1791   \n",
      "557           0.04971        0.000000             0.000000         0.1742   \n",
      "558           0.13300        0.102900             0.037360         0.1454   \n",
      "559           0.10210        0.111200             0.041050         0.1388   \n",
      "560           0.11260        0.044620             0.043040         0.1537   \n",
      "561           0.03558        0.000000             0.000000         0.1060   \n",
      "562           0.20870        0.255000             0.094290         0.2128   \n",
      "563           0.22360        0.317400             0.147400         0.2149   \n",
      "564           0.11590        0.243900             0.138900         0.1726   \n",
      "565           0.10340        0.144000             0.097910         0.1752   \n",
      "566           0.10230        0.092510             0.053020         0.1590   \n",
      "567           0.27700        0.351400             0.152000         0.2397   \n",
      "568           0.04362        0.000000             0.000000         0.1587   \n",
      "\n",
      "     mean fractal dimension           ...             worst radius  \\\n",
      "0                   0.07871           ...                   25.380   \n",
      "1                   0.05667           ...                   24.990   \n",
      "2                   0.05999           ...                   23.570   \n",
      "3                   0.09744           ...                   14.910   \n",
      "4                   0.05883           ...                   22.540   \n",
      "5                   0.07613           ...                   15.470   \n",
      "6                   0.05742           ...                   22.880   \n",
      "7                   0.07451           ...                   17.060   \n",
      "8                   0.07389           ...                   15.490   \n",
      "9                   0.08243           ...                   15.090   \n",
      "10                  0.05697           ...                   19.190   \n",
      "11                  0.06082           ...                   20.420   \n",
      "12                  0.07800           ...                   20.960   \n",
      "13                  0.05338           ...                   16.840   \n",
      "14                  0.07682           ...                   15.030   \n",
      "15                  0.07077           ...                   17.460   \n",
      "16                  0.05922           ...                   19.070   \n",
      "17                  0.07356           ...                   20.960   \n",
      "18                  0.05395           ...                   27.320   \n",
      "19                  0.05766           ...                   15.110   \n",
      "20                  0.06811           ...                   14.500   \n",
      "21                  0.06905           ...                   10.230   \n",
      "22                  0.07032           ...                   18.070   \n",
      "23                  0.05278           ...                   29.170   \n",
      "24                  0.06330           ...                   26.460   \n",
      "25                  0.07413           ...                   22.250   \n",
      "26                  0.06924           ...                   17.620   \n",
      "27                  0.05699           ...                   21.310   \n",
      "28                  0.06540           ...                   20.270   \n",
      "29                  0.06149           ...                   20.010   \n",
      "..                      ...           ...                      ...   \n",
      "539                 0.07751           ...                    8.678   \n",
      "540                 0.06782           ...                   12.260   \n",
      "541                 0.06341           ...                   16.220   \n",
      "542                 0.05680           ...                   16.510   \n",
      "543                 0.05781           ...                   14.370   \n",
      "544                 0.06688           ...                   15.050   \n",
      "545                 0.05801           ...                   15.350   \n",
      "546                 0.06201           ...                   11.250   \n",
      "547                 0.06714           ...                   10.830   \n",
      "548                 0.06235           ...                   10.930   \n",
      "549                 0.06328           ...                   13.030   \n",
      "550                 0.05948           ...                   11.660   \n",
      "551                 0.06552           ...                   12.020   \n",
      "552                 0.05637           ...                   13.870   \n",
      "553                 0.06576           ...                    9.845   \n",
      "554                 0.05708           ...                   13.890   \n",
      "555                 0.06127           ...                   10.840   \n",
      "556                 0.06331           ...                   10.650   \n",
      "557                 0.06059           ...                   10.490   \n",
      "558                 0.06147           ...                   15.480   \n",
      "559                 0.06570           ...                   12.480   \n",
      "560                 0.06171           ...                   15.300   \n",
      "561                 0.05502           ...                   11.920   \n",
      "562                 0.07152           ...                   17.520   \n",
      "563                 0.06879           ...                   24.290   \n",
      "564                 0.05623           ...                   25.450   \n",
      "565                 0.05533           ...                   23.690   \n",
      "566                 0.05648           ...                   18.980   \n",
      "567                 0.07016           ...                   25.740   \n",
      "568                 0.05884           ...                    9.456   \n",
      "\n",
      "     worst texture  worst perimeter  worst area  worst smoothness  \\\n",
      "0            17.33           184.60      2019.0           0.16220   \n",
      "1            23.41           158.80      1956.0           0.12380   \n",
      "2            25.53           152.50      1709.0           0.14440   \n",
      "3            26.50            98.87       567.7           0.20980   \n",
      "4            16.67           152.20      1575.0           0.13740   \n",
      "5            23.75           103.40       741.6           0.17910   \n",
      "6            27.66           153.20      1606.0           0.14420   \n",
      "7            28.14           110.60       897.0           0.16540   \n",
      "8            30.73           106.20       739.3           0.17030   \n",
      "9            40.68            97.65       711.4           0.18530   \n",
      "10           33.88           123.80      1150.0           0.11810   \n",
      "11           27.28           136.50      1299.0           0.13960   \n",
      "12           29.94           151.70      1332.0           0.10370   \n",
      "13           27.66           112.00       876.5           0.11310   \n",
      "14           32.01           108.80       697.7           0.16510   \n",
      "15           37.13           124.10       943.2           0.16780   \n",
      "16           30.88           123.40      1138.0           0.14640   \n",
      "17           31.48           136.80      1315.0           0.17890   \n",
      "18           30.88           186.80      2398.0           0.15120   \n",
      "19           19.26            99.70       711.2           0.14400   \n",
      "20           20.49            96.09       630.5           0.13120   \n",
      "21           15.66            65.13       314.9           0.13240   \n",
      "22           19.08           125.10       980.9           0.13900   \n",
      "23           35.59           188.00      2615.0           0.14010   \n",
      "24           31.56           177.00      2215.0           0.18050   \n",
      "25           21.40           152.40      1461.0           0.15450   \n",
      "26           33.21           122.40       896.9           0.15250   \n",
      "27           27.26           139.90      1403.0           0.13380   \n",
      "28           36.71           149.30      1269.0           0.16410   \n",
      "29           19.52           134.90      1227.0           0.12550   \n",
      "..             ...              ...         ...               ...   \n",
      "539          31.89            54.49       223.6           0.15960   \n",
      "540          19.68            78.78       457.8           0.13450   \n",
      "541          31.73           113.50       808.9           0.13400   \n",
      "542          32.29           107.40       826.4           0.10600   \n",
      "543          37.17            92.48       629.6           0.10720   \n",
      "544          24.75            99.17       688.6           0.12640   \n",
      "545          29.09            97.58       729.8           0.12160   \n",
      "546          21.77            71.12       384.9           0.12850   \n",
      "547          22.04            71.08       357.4           0.14610   \n",
      "548          25.59            69.10       364.2           0.11990   \n",
      "549          31.45            83.90       505.6           0.12040   \n",
      "550          24.77            74.08       412.3           0.10010   \n",
      "551          28.26            77.80       436.6           0.10870   \n",
      "552          36.00            88.10       594.7           0.12340   \n",
      "553          25.05            62.86       295.8           0.11030   \n",
      "554          35.74            88.84       595.7           0.12270   \n",
      "555          34.91            69.57       357.6           0.13840   \n",
      "556          22.88            67.88       347.3           0.12650   \n",
      "557          34.24            66.50       330.6           0.10730   \n",
      "558          27.27           105.90       733.5           0.10260   \n",
      "559          37.16            82.28       474.2           0.12980   \n",
      "560          33.17           100.20       706.7           0.12410   \n",
      "561          38.30            75.19       439.6           0.09267   \n",
      "562          42.79           128.70       915.0           0.14170   \n",
      "563          29.41           179.10      1819.0           0.14070   \n",
      "564          26.40           166.10      2027.0           0.14100   \n",
      "565          38.25           155.00      1731.0           0.11660   \n",
      "566          34.12           126.70      1124.0           0.11390   \n",
      "567          39.42           184.60      1821.0           0.16500   \n",
      "568          30.37            59.16       268.6           0.08996   \n",
      "\n",
      "     worst compactness  worst concavity  worst concave points  worst symmetry  \\\n",
      "0              0.66560          0.71190               0.26540          0.4601   \n",
      "1              0.18660          0.24160               0.18600          0.2750   \n",
      "2              0.42450          0.45040               0.24300          0.3613   \n",
      "3              0.86630          0.68690               0.25750          0.6638   \n",
      "4              0.20500          0.40000               0.16250          0.2364   \n",
      "5              0.52490          0.53550               0.17410          0.3985   \n",
      "6              0.25760          0.37840               0.19320          0.3063   \n",
      "7              0.36820          0.26780               0.15560          0.3196   \n",
      "8              0.54010          0.53900               0.20600          0.4378   \n",
      "9              1.05800          1.10500               0.22100          0.4366   \n",
      "10             0.15510          0.14590               0.09975          0.2948   \n",
      "11             0.56090          0.39650               0.18100          0.3792   \n",
      "12             0.39030          0.36390               0.17670          0.3176   \n",
      "13             0.19240          0.23220               0.11190          0.2809   \n",
      "14             0.77250          0.69430               0.22080          0.3596   \n",
      "15             0.65770          0.70260               0.17120          0.4218   \n",
      "16             0.18710          0.29140               0.16090          0.3029   \n",
      "17             0.42330          0.47840               0.20730          0.3706   \n",
      "18             0.31500          0.53720               0.23880          0.2768   \n",
      "19             0.17730          0.23900               0.12880          0.2977   \n",
      "20             0.27760          0.18900               0.07283          0.3184   \n",
      "21             0.11480          0.08867               0.06227          0.2450   \n",
      "22             0.59540          0.63050               0.23930          0.4667   \n",
      "23             0.26000          0.31550               0.20090          0.2822   \n",
      "24             0.35780          0.46950               0.20950          0.3613   \n",
      "25             0.39490          0.38530               0.25500          0.4066   \n",
      "26             0.66430          0.55390               0.27010          0.4264   \n",
      "27             0.21170          0.34460               0.14900          0.2341   \n",
      "28             0.61100          0.63350               0.20240          0.4027   \n",
      "29             0.28120          0.24890               0.14560          0.2756   \n",
      "..                 ...              ...                   ...             ...   \n",
      "539            0.30640          0.33930               0.05000          0.2790   \n",
      "540            0.21180          0.17970               0.06918          0.2329   \n",
      "541            0.42020          0.40400               0.12050          0.3187   \n",
      "542            0.13760          0.16110               0.10950          0.2722   \n",
      "543            0.13810          0.10620               0.07958          0.2473   \n",
      "544            0.20370          0.13770               0.06845          0.2249   \n",
      "545            0.15170          0.10490               0.07174          0.2642   \n",
      "546            0.08842          0.04384               0.02381          0.2681   \n",
      "547            0.22460          0.17830               0.08333          0.2691   \n",
      "548            0.09546          0.09350               0.03846          0.2552   \n",
      "549            0.16330          0.06194               0.03264          0.3059   \n",
      "550            0.07348          0.00000               0.00000          0.2458   \n",
      "551            0.17820          0.15640               0.06413          0.3169   \n",
      "552            0.10640          0.08653               0.06498          0.2407   \n",
      "553            0.08298          0.07993               0.02564          0.2435   \n",
      "554            0.16200          0.24390               0.06493          0.2372   \n",
      "555            0.17100          0.20000               0.09127          0.2226   \n",
      "556            0.12000          0.01005               0.02232          0.2262   \n",
      "557            0.07158          0.00000               0.00000          0.2475   \n",
      "558            0.31710          0.36620               0.11050          0.2258   \n",
      "559            0.25170          0.36300               0.09653          0.2112   \n",
      "560            0.22640          0.13260               0.10480          0.2250   \n",
      "561            0.05494          0.00000               0.00000          0.1566   \n",
      "562            0.79170          1.17000               0.23560          0.4089   \n",
      "563            0.41860          0.65990               0.25420          0.2929   \n",
      "564            0.21130          0.41070               0.22160          0.2060   \n",
      "565            0.19220          0.32150               0.16280          0.2572   \n",
      "566            0.30940          0.34030               0.14180          0.2218   \n",
      "567            0.86810          0.93870               0.26500          0.4087   \n",
      "568            0.06444          0.00000               0.00000          0.2871   \n",
      "\n",
      "     worst fractal dimension  \n",
      "0                    0.11890  \n",
      "1                    0.08902  \n",
      "2                    0.08758  \n",
      "3                    0.17300  \n",
      "4                    0.07678  \n",
      "5                    0.12440  \n",
      "6                    0.08368  \n",
      "7                    0.11510  \n",
      "8                    0.10720  \n",
      "9                    0.20750  \n",
      "10                   0.08452  \n",
      "11                   0.10480  \n",
      "12                   0.10230  \n",
      "13                   0.06287  \n",
      "14                   0.14310  \n",
      "15                   0.13410  \n",
      "16                   0.08216  \n",
      "17                   0.11420  \n",
      "18                   0.07615  \n",
      "19                   0.07259  \n",
      "20                   0.08183  \n",
      "21                   0.07773  \n",
      "22                   0.09946  \n",
      "23                   0.07526  \n",
      "24                   0.09564  \n",
      "25                   0.10590  \n",
      "26                   0.12750  \n",
      "27                   0.07421  \n",
      "28                   0.09876  \n",
      "29                   0.07919  \n",
      "..                       ...  \n",
      "539                  0.10660  \n",
      "540                  0.08134  \n",
      "541                  0.10230  \n",
      "542                  0.06956  \n",
      "543                  0.06443  \n",
      "544                  0.08492  \n",
      "545                  0.06953  \n",
      "546                  0.07399  \n",
      "547                  0.09479  \n",
      "548                  0.07920  \n",
      "549                  0.07626  \n",
      "550                  0.06592  \n",
      "551                  0.08032  \n",
      "552                  0.06484  \n",
      "553                  0.07393  \n",
      "554                  0.07242  \n",
      "555                  0.08283  \n",
      "556                  0.06742  \n",
      "557                  0.06969  \n",
      "558                  0.08004  \n",
      "559                  0.08732  \n",
      "560                  0.08321  \n",
      "561                  0.05905  \n",
      "562                  0.14090  \n",
      "563                  0.09873  \n",
      "564                  0.07115  \n",
      "565                  0.06637  \n",
      "566                  0.07820  \n",
      "567                  0.12400  \n",
      "568                  0.07039  \n",
      "\n",
      "[569 rows x 30 columns]\n"
     ]
    }
   ],
   "source": [
    "features = pd.DataFrame(cancer_data.data, columns = cancer_data.feature_names)\n",
    "# we use this to get the column of the datasets if not the pandas with number our columns from o and so on\n",
    "print(features)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(569, 30)\n"
     ]
    }
   ],
   "source": [
    "print(features.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     0\n",
      "0    0\n",
      "1    0\n",
      "2    0\n",
      "3    0\n",
      "4    0\n",
      "5    0\n",
      "6    0\n",
      "7    0\n",
      "8    0\n",
      "9    0\n",
      "10   0\n",
      "11   0\n",
      "12   0\n",
      "13   0\n",
      "14   0\n",
      "15   0\n",
      "16   0\n",
      "17   0\n",
      "18   0\n",
      "19   1\n",
      "20   1\n",
      "21   1\n",
      "22   0\n",
      "23   0\n",
      "24   0\n",
      "25   0\n",
      "26   0\n",
      "27   0\n",
      "28   0\n",
      "29   0\n",
      "..  ..\n",
      "539  1\n",
      "540  1\n",
      "541  1\n",
      "542  1\n",
      "543  1\n",
      "544  1\n",
      "545  1\n",
      "546  1\n",
      "547  1\n",
      "548  1\n",
      "549  1\n",
      "550  1\n",
      "551  1\n",
      "552  1\n",
      "553  1\n",
      "554  1\n",
      "555  1\n",
      "556  1\n",
      "557  1\n",
      "558  1\n",
      "559  1\n",
      "560  1\n",
      "561  1\n",
      "562  0\n",
      "563  0\n",
      "564  0\n",
      "565  0\n",
      "566  0\n",
      "567  0\n",
      "568  1\n",
      "\n",
      "[569 rows x 1 columns]\n"
     ]
    }
   ],
   "source": [
    "#we can also turn the targets into dataframes i.e\n",
    "targets = pd.DataFrame(cancer_data.target)\n",
    "print(targets)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean radius\n",
      "mean texture\n",
      "mean perimeter\n",
      "mean area\n",
      "mean smoothness\n",
      "mean compactness\n",
      "mean concavity\n",
      "mean concave points\n",
      "mean symmetry\n",
      "mean fractal dimension\n",
      "radius error\n",
      "texture error\n",
      "perimeter error\n",
      "area error\n",
      "smoothness error\n",
      "compactness error\n",
      "concavity error\n",
      "concave points error\n",
      "symmetry error\n",
      "fractal dimension error\n",
      "worst radius\n",
      "worst texture\n",
      "worst perimeter\n",
      "worst area\n",
      "worst smoothness\n",
      "worst compactness\n",
      "worst concavity\n",
      "worst concave points\n",
      "worst symmetry\n",
      "worst fractal dimension\n"
     ]
    }
   ],
   "source": [
    "for feature_name in cancer_data.feature_names:\n",
    "    print(feature_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean radius\n",
      "mean texture\n",
      "mean perimeter\n",
      "mean area\n",
      "mean smoothness\n",
      "mean compactness\n",
      "mean concavity\n",
      "mean concave points\n",
      "mean symmetry\n",
      "mean fractal dimension\n",
      "radius error\n",
      "texture error\n",
      "perimeter error\n",
      "area error\n",
      "smoothness error\n",
      "compactness error\n",
      "concavity error\n",
      "concave points error\n",
      "symmetry error\n",
      "fractal dimension error\n",
      "worst radius\n",
      "worst texture\n",
      "worst perimeter\n",
      "worst area\n",
      "worst smoothness\n",
      "worst compactness\n",
      "worst concavity\n",
      "worst concave points\n",
      "worst symmetry\n",
      "worst fractal dimension\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n0+Puy6RJk+jQoQM33ngjkydPZvz48bRr1y7cB4BLL72Uvn37cscdd4TPmixbtowtW7aE/3CuXr2a\nRx55hDVr1rBixYpw+//6178466yz2L9/P9/5znfo168f27dv55lnnuHgwYOMHj2amTNn8utf/5r/\n+q//on///gDhR9zPmzeP9u3b84Mf/IB27drx8ssv89///d98+umn3HXXXfX+7G6++WbmzJnDhAkT\nuPjiiykqKmLs2LGUl5dXqxt7tsXMKCkp4Wtf+xpXXHEFl112GQ899BD5+fksWLCAG2+8kRkzZnDl\nlVdy9913c+mll/Lxxx/Ttm1bIHgGafjw4SQlJTFz5kwyMzP561//yrXXXsunn37KzJkzo7Z35513\nkpSUxI9+9CNKS0u56667mDJlSnh8y8vLw32fOXMmXbp0Yfv27SxevJh9+/bRvn37uPuxa9cuRo4c\nyeHDh7nhhhvIyMhg/vz5TJw4kWeffZb/+I//qFc/WjTn3DH9AnIAV1hY6ESkusLCQlfbfyMlJSVu\nwIAvO7NkZzbWBQIjHOAuvfRyV1FREVV39+7dLjm5lYM7HbiI1wIHuNWrV1drv7S01M2aNculpXV0\ngUCSGzVqjFu+fHmj7N+ECRPciBEjwu8nTZrkvvnNb7pWrVq5JUuWOOecKyoqcmbmXnjhhfA+pKSk\nuIsvvjiqrd/+9rcuEAi4efPmhcvGjBnjAoGA+93vfhdV93//939dIBBwRUVFCfu2Z88eZ2Zu9uzZ\nddqXrVu3OjNz9957b1T5rbfe6szMTZkypdo6hw8frlb25JNPukAg4N54441w2dSpU11ycnKN/X3m\nmWdcIBBwr776ap22M336dNeuXTtXVlYWLrv66qtdr169Em7DuS/Gf+LEiVHlN910kzMzd80114TL\nli9fXq1PVZ/JU089FS5bt26dMzOXnJzs3n777XD50qVLnZm5+fPnh8uuvfZa17VrV7d3796o7efn\n57sOHTqE93X58uXOzNygQYPckSNHwvUefPBBFwgEwsf6e++958zMPffcczXud8+ePaP27cYbb3SB\nQMC9+eab4bIDBw643r17u969e0eNQV36EU9t//1XLQdynMe/1bqMIiLceeedrF+/Fefew7klVFau\nAJ7iz39+ihdeeCGq7rp16zhypBz4akwrwfcffPBBVOmRI0cYO/ZiHnzwMUpLr6Gy8l7+8Y/PuOCC\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x63b30c93c8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for feature_name in cancer_data.feature_names:\n",
    "    print(feature_name)\n",
    "plt.scatter(features[feature_name], targets,label=feature_name)\n",
    "plt.legend() # to show the label name\n",
    "plt.show()\n",
    "#features[feature_name] that is from the attribute we have assigned and a column in that attribute\n",
    "# using x values for features and y values for targets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "569\n",
      "569\n",
      "455.20000000000005\n"
     ]
    }
   ],
   "source": [
    "#lets print the lenght of our features and that of our dataframe\n",
    "print(len(features))\n",
    "print(len(targets))\n",
    "#splitting into training and test set\n",
    "#then taking 80% of our dataset\n",
    "print(569 * 0.80)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n",
      "0        17.990         10.38          122.80     1001.0          0.11840   \n",
      "1        20.570         17.77          132.90     1326.0          0.08474   \n",
      "2        19.690         21.25          130.00     1203.0          0.10960   \n",
      "3        11.420         20.38           77.58      386.1          0.14250   \n",
      "4        20.290         14.34          135.10     1297.0          0.10030   \n",
      "5        12.450         15.70           82.57      477.1          0.12780   \n",
      "6        18.250         19.98          119.60     1040.0          0.09463   \n",
      "7        13.710         20.83           90.20      577.9          0.11890   \n",
      "8        13.000         21.82           87.50      519.8          0.12730   \n",
      "9        12.460         24.04           83.97      475.9          0.11860   \n",
      "10       16.020         23.24          102.70      797.8          0.08206   \n",
      "11       15.780         17.89          103.60      781.0          0.09710   \n",
      "12       19.170         24.80          132.40     1123.0          0.09740   \n",
      "13       15.850         23.95          103.70      782.7          0.08401   \n",
      "14       13.730         22.61           93.60      578.3          0.11310   \n",
      "15       14.540         27.54           96.73      658.8          0.11390   \n",
      "16       14.680         20.13           94.74      684.5          0.09867   \n",
      "17       16.130         20.68          108.10      798.8          0.11700   \n",
      "18       19.810         22.15          130.00     1260.0          0.09831   \n",
      "19       13.540         14.36           87.46      566.3          0.09779   \n",
      "20       13.080         15.71           85.63      520.0          0.10750   \n",
      "21        9.504         12.44           60.34      273.9          0.10240   \n",
      "22       15.340         14.26          102.50      704.4          0.10730   \n",
      "23       21.160         23.04          137.20     1404.0          0.09428   \n",
      "24       16.650         21.38          110.00      904.6          0.11210   \n",
      "25       17.140         16.40          116.00      912.7          0.11860   \n",
      "26       14.580         21.53           97.41      644.8          0.10540   \n",
      "27       18.610         20.25          122.10     1094.0          0.09440   \n",
      "28       15.300         25.27          102.40      732.4          0.10820   \n",
      "29       17.570         15.05          115.00      955.1          0.09847   \n",
      "30       18.630         25.11          124.80     1088.0          0.10640   \n",
      "31       11.840         18.70           77.93      440.6          0.11090   \n",
      "32       17.020         23.98          112.80      899.3          0.11970   \n",
      "33       19.270         26.47          127.90     1162.0          0.09401   \n",
      "34       16.130         17.88          107.00      807.2          0.10400   \n",
      "35       16.740         21.59          110.10      869.5          0.09610   \n",
      "36       14.250         21.72           93.63      633.0          0.09823   \n",
      "37       13.030         18.42           82.61      523.8          0.08983   \n",
      "38       14.990         25.20           95.54      698.8          0.09387   \n",
      "39       13.480         20.82           88.40      559.2          0.10160   \n",
      "40       13.440         21.58           86.18      563.0          0.08162   \n",
      "41       10.950         21.35           71.90      371.1          0.12270   \n",
      "42       19.070         24.81          128.30     1104.0          0.09081   \n",
      "43       13.280         20.28           87.32      545.2          0.10410   \n",
      "44       13.170         21.81           85.42      531.5          0.09714   \n",
      "45       18.650         17.60          123.70     1076.0          0.10990   \n",
      "46        8.196         16.84           51.71      201.9          0.08600   \n",
      "47       13.170         18.66           85.98      534.6          0.11580   \n",
      "48       12.050         14.63           78.04      449.3          0.10310   \n",
      "49       13.490         22.30           86.91      561.0          0.08752   \n",
      "50       11.760         21.60           74.72      427.9          0.08637   \n",
      "51       13.640         16.34           87.21      571.8          0.07685   \n",
      "52       11.940         18.24           75.71      437.6          0.08261   \n",
      "53       18.220         18.70          120.30     1033.0          0.11480   \n",
      "54       15.100         22.02           97.26      712.8          0.09056   \n",
      "\n",
      "    mean compactness  mean concavity  mean concave points  mean symmetry  \\\n",
      "0            0.27760         0.30010             0.147100         0.2419   \n",
      "1            0.07864         0.08690             0.070170         0.1812   \n",
      "2            0.15990         0.19740             0.127900         0.2069   \n",
      "3            0.28390         0.24140             0.105200         0.2597   \n",
      "4            0.13280         0.19800             0.104300         0.1809   \n",
      "5            0.17000         0.15780             0.080890         0.2087   \n",
      "6            0.10900         0.11270             0.074000         0.1794   \n",
      "7            0.16450         0.09366             0.059850         0.2196   \n",
      "8            0.19320         0.18590             0.093530         0.2350   \n",
      "9            0.23960         0.22730             0.085430         0.2030   \n",
      "10           0.06669         0.03299             0.033230         0.1528   \n",
      "11           0.12920         0.09954             0.066060         0.1842   \n",
      "12           0.24580         0.20650             0.111800         0.2397   \n",
      "13           0.10020         0.09938             0.053640         0.1847   \n",
      "14           0.22930         0.21280             0.080250         0.2069   \n",
      "15           0.15950         0.16390             0.073640         0.2303   \n",
      "16           0.07200         0.07395             0.052590         0.1586   \n",
      "17           0.20220         0.17220             0.102800         0.2164   \n",
      "18           0.10270         0.14790             0.094980         0.1582   \n",
      "19           0.08129         0.06664             0.047810         0.1885   \n",
      "20           0.12700         0.04568             0.031100         0.1967   \n",
      "21           0.06492         0.02956             0.020760         0.1815   \n",
      "22           0.21350         0.20770             0.097560         0.2521   \n",
      "23           0.10220         0.10970             0.086320         0.1769   \n",
      "24           0.14570         0.15250             0.091700         0.1995   \n",
      "25           0.22760         0.22290             0.140100         0.3040   \n",
      "26           0.18680         0.14250             0.087830         0.2252   \n",
      "27           0.10660         0.14900             0.077310         0.1697   \n",
      "28           0.16970         0.16830             0.087510         0.1926   \n",
      "29           0.11570         0.09875             0.079530         0.1739   \n",
      "30           0.18870         0.23190             0.124400         0.2183   \n",
      "31           0.15160         0.12180             0.051820         0.2301   \n",
      "32           0.14960         0.24170             0.120300         0.2248   \n",
      "33           0.17190         0.16570             0.075930         0.1853   \n",
      "34           0.15590         0.13540             0.077520         0.1998   \n",
      "35           0.13360         0.13480             0.060180         0.1896   \n",
      "36           0.10980         0.13190             0.055980         0.1885   \n",
      "37           0.03766         0.02562             0.029230         0.1467   \n",
      "38           0.05131         0.02398             0.028990         0.1565   \n",
      "39           0.12550         0.10630             0.054390         0.1720   \n",
      "40           0.06031         0.03110             0.020310         0.1784   \n",
      "41           0.12180         0.10440             0.056690         0.1895   \n",
      "42           0.21900         0.21070             0.099610         0.2310   \n",
      "43           0.14360         0.09847             0.061580         0.1974   \n",
      "44           0.10470         0.08259             0.052520         0.1746   \n",
      "45           0.16860         0.19740             0.100900         0.1907   \n",
      "46           0.05943         0.01588             0.005917         0.1769   \n",
      "47           0.12310         0.12260             0.073400         0.2128   \n",
      "48           0.09092         0.06592             0.027490         0.1675   \n",
      "49           0.07698         0.04751             0.033840         0.1809   \n",
      "50           0.04966         0.01657             0.011150         0.1495   \n",
      "51           0.06059         0.01857             0.017230         0.1353   \n",
      "52           0.04751         0.01972             0.013490         0.1868   \n",
      "53           0.14850         0.17720             0.106000         0.2092   \n",
      "54           0.07081         0.05253             0.033340         0.1616   \n",
      "\n",
      "    mean fractal dimension           ...             worst radius  \\\n",
      "0                  0.07871           ...                   25.380   \n",
      "1                  0.05667           ...                   24.990   \n",
      "2                  0.05999           ...                   23.570   \n",
      "3                  0.09744           ...                   14.910   \n",
      "4                  0.05883           ...                   22.540   \n",
      "5                  0.07613           ...                   15.470   \n",
      "6                  0.05742           ...                   22.880   \n",
      "7                  0.07451           ...                   17.060   \n",
      "8                  0.07389           ...                   15.490   \n",
      "9                  0.08243           ...                   15.090   \n",
      "10                 0.05697           ...                   19.190   \n",
      "11                 0.06082           ...                   20.420   \n",
      "12                 0.07800           ...                   20.960   \n",
      "13                 0.05338           ...                   16.840   \n",
      "14                 0.07682           ...                   15.030   \n",
      "15                 0.07077           ...                   17.460   \n",
      "16                 0.05922           ...                   19.070   \n",
      "17                 0.07356           ...                   20.960   \n",
      "18                 0.05395           ...                   27.320   \n",
      "19                 0.05766           ...                   15.110   \n",
      "20                 0.06811           ...                   14.500   \n",
      "21                 0.06905           ...                   10.230   \n",
      "22                 0.07032           ...                   18.070   \n",
      "23                 0.05278           ...                   29.170   \n",
      "24                 0.06330           ...                   26.460   \n",
      "25                 0.07413           ...                   22.250   \n",
      "26                 0.06924           ...                   17.620   \n",
      "27                 0.05699           ...                   21.310   \n",
      "28                 0.06540           ...                   20.270   \n",
      "29                 0.06149           ...                   20.010   \n",
      "30                 0.06197           ...                   23.150   \n",
      "31                 0.07799           ...                   16.820   \n",
      "32                 0.06382           ...                   20.880   \n",
      "33                 0.06261           ...                   24.150   \n",
      "34                 0.06515           ...                   20.210   \n",
      "35                 0.05656           ...                   20.010   \n",
      "36                 0.06125           ...                   15.890   \n",
      "37                 0.05863           ...                   13.300   \n",
      "38                 0.05504           ...                   14.990   \n",
      "39                 0.06419           ...                   15.530   \n",
      "40                 0.05587           ...                   15.930   \n",
      "41                 0.06870           ...                   12.840   \n",
      "42                 0.06343           ...                   24.090   \n",
      "43                 0.06782           ...                   17.380   \n",
      "44                 0.06177           ...                   16.230   \n",
      "45                 0.06049           ...                   22.820   \n",
      "46                 0.06503           ...                    8.964   \n",
      "47                 0.06777           ...                   15.670   \n",
      "48                 0.06043           ...                   13.760   \n",
      "49                 0.05718           ...                   15.150   \n",
      "50                 0.05888           ...                   12.980   \n",
      "51                 0.05953           ...                   14.670   \n",
      "52                 0.06110           ...                   13.100   \n",
      "53                 0.06310           ...                   20.600   \n",
      "54                 0.05684           ...                   18.100   \n",
      "\n",
      "    worst texture  worst perimeter  worst area  worst smoothness  \\\n",
      "0           17.33           184.60      2019.0           0.16220   \n",
      "1           23.41           158.80      1956.0           0.12380   \n",
      "2           25.53           152.50      1709.0           0.14440   \n",
      "3           26.50            98.87       567.7           0.20980   \n",
      "4           16.67           152.20      1575.0           0.13740   \n",
      "5           23.75           103.40       741.6           0.17910   \n",
      "6           27.66           153.20      1606.0           0.14420   \n",
      "7           28.14           110.60       897.0           0.16540   \n",
      "8           30.73           106.20       739.3           0.17030   \n",
      "9           40.68            97.65       711.4           0.18530   \n",
      "10          33.88           123.80      1150.0           0.11810   \n",
      "11          27.28           136.50      1299.0           0.13960   \n",
      "12          29.94           151.70      1332.0           0.10370   \n",
      "13          27.66           112.00       876.5           0.11310   \n",
      "14          32.01           108.80       697.7           0.16510   \n",
      "15          37.13           124.10       943.2           0.16780   \n",
      "16          30.88           123.40      1138.0           0.14640   \n",
      "17          31.48           136.80      1315.0           0.17890   \n",
      "18          30.88           186.80      2398.0           0.15120   \n",
      "19          19.26            99.70       711.2           0.14400   \n",
      "20          20.49            96.09       630.5           0.13120   \n",
      "21          15.66            65.13       314.9           0.13240   \n",
      "22          19.08           125.10       980.9           0.13900   \n",
      "23          35.59           188.00      2615.0           0.14010   \n",
      "24          31.56           177.00      2215.0           0.18050   \n",
      "25          21.40           152.40      1461.0           0.15450   \n",
      "26          33.21           122.40       896.9           0.15250   \n",
      "27          27.26           139.90      1403.0           0.13380   \n",
      "28          36.71           149.30      1269.0           0.16410   \n",
      "29          19.52           134.90      1227.0           0.12550   \n",
      "30          34.01           160.50      1670.0           0.14910   \n",
      "31          28.12           119.40       888.7           0.16370   \n",
      "32          32.09           136.10      1344.0           0.16340   \n",
      "33          30.90           161.40      1813.0           0.15090   \n",
      "34          27.26           132.70      1261.0           0.14460   \n",
      "35          29.02           133.50      1229.0           0.15630   \n",
      "36          30.36           116.20       799.6           0.14460   \n",
      "37          22.81            84.46       545.9           0.09701   \n",
      "38          25.20            95.54       698.8           0.09387   \n",
      "39          26.02           107.30       740.4           0.16100   \n",
      "40          30.25           102.50       787.9           0.10940   \n",
      "41          35.34            87.22       514.0           0.19090   \n",
      "42          33.17           177.40      1651.0           0.12470   \n",
      "43          28.00           113.10       907.2           0.15300   \n",
      "44          29.89           105.50       740.7           0.15030   \n",
      "45          21.32           150.60      1567.0           0.16790   \n",
      "46          21.96            57.26       242.2           0.12970   \n",
      "47          27.95           102.80       759.4           0.17860   \n",
      "48          20.70            89.88       582.6           0.14940   \n",
      "49          31.82            99.00       698.8           0.11620   \n",
      "50          25.72            82.98       516.5           0.10850   \n",
      "51          23.19            96.08       656.7           0.10890   \n",
      "52          21.33            83.67       527.2           0.11440   \n",
      "53          24.13           135.10      1321.0           0.12800   \n",
      "54          31.69           117.70      1030.0           0.13890   \n",
      "\n",
      "    worst compactness  worst concavity  worst concave points  worst symmetry  \\\n",
      "0             0.66560          0.71190               0.26540          0.4601   \n",
      "1             0.18660          0.24160               0.18600          0.2750   \n",
      "2             0.42450          0.45040               0.24300          0.3613   \n",
      "3             0.86630          0.68690               0.25750          0.6638   \n",
      "4             0.20500          0.40000               0.16250          0.2364   \n",
      "5             0.52490          0.53550               0.17410          0.3985   \n",
      "6             0.25760          0.37840               0.19320          0.3063   \n",
      "7             0.36820          0.26780               0.15560          0.3196   \n",
      "8             0.54010          0.53900               0.20600          0.4378   \n",
      "9             1.05800          1.10500               0.22100          0.4366   \n",
      "10            0.15510          0.14590               0.09975          0.2948   \n",
      "11            0.56090          0.39650               0.18100          0.3792   \n",
      "12            0.39030          0.36390               0.17670          0.3176   \n",
      "13            0.19240          0.23220               0.11190          0.2809   \n",
      "14            0.77250          0.69430               0.22080          0.3596   \n",
      "15            0.65770          0.70260               0.17120          0.4218   \n",
      "16            0.18710          0.29140               0.16090          0.3029   \n",
      "17            0.42330          0.47840               0.20730          0.3706   \n",
      "18            0.31500          0.53720               0.23880          0.2768   \n",
      "19            0.17730          0.23900               0.12880          0.2977   \n",
      "20            0.27760          0.18900               0.07283          0.3184   \n",
      "21            0.11480          0.08867               0.06227          0.2450   \n",
      "22            0.59540          0.63050               0.23930          0.4667   \n",
      "23            0.26000          0.31550               0.20090          0.2822   \n",
      "24            0.35780          0.46950               0.20950          0.3613   \n",
      "25            0.39490          0.38530               0.25500          0.4066   \n",
      "26            0.66430          0.55390               0.27010          0.4264   \n",
      "27            0.21170          0.34460               0.14900          0.2341   \n",
      "28            0.61100          0.63350               0.20240          0.4027   \n",
      "29            0.28120          0.24890               0.14560          0.2756   \n",
      "30            0.42570          0.61330               0.18480          0.3444   \n",
      "31            0.57750          0.69560               0.15460          0.4761   \n",
      "32            0.35590          0.55880               0.18470          0.3530   \n",
      "33            0.65900          0.60910               0.17850          0.3672   \n",
      "34            0.58040          0.52740               0.18640          0.4270   \n",
      "35            0.38350          0.54090               0.18130          0.4863   \n",
      "36            0.42380          0.51860               0.14470          0.3591   \n",
      "37            0.04619          0.04833               0.05013          0.1987   \n",
      "38            0.05131          0.02398               0.02899          0.1565   \n",
      "39            0.42250          0.50300               0.22580          0.2807   \n",
      "40            0.20430          0.20850               0.11120          0.2994   \n",
      "41            0.26980          0.40230               0.14240          0.2964   \n",
      "42            0.74440          0.72420               0.24930          0.4670   \n",
      "43            0.37240          0.36640               0.14920          0.3739   \n",
      "44            0.39040          0.37280               0.16070          0.3693   \n",
      "45            0.50900          0.73450               0.23780          0.3799   \n",
      "46            0.13570          0.06880               0.02564          0.3105   \n",
      "47            0.41660          0.50060               0.20880          0.3900   \n",
      "48            0.21560          0.30500               0.06548          0.2747   \n",
      "49            0.17110          0.22820               0.12820          0.2871   \n",
      "50            0.08615          0.05523               0.03715          0.2433   \n",
      "51            0.15820          0.10500               0.08586          0.2346   \n",
      "52            0.08906          0.09203               0.06296          0.2785   \n",
      "53            0.22970          0.26230               0.13250          0.3021   \n",
      "54            0.20570          0.27120               0.15300          0.2675   \n",
      "\n",
      "    worst fractal dimension  \n",
      "0                   0.11890  \n",
      "1                   0.08902  \n",
      "2                   0.08758  \n",
      "3                   0.17300  \n",
      "4                   0.07678  \n",
      "5                   0.12440  \n",
      "6                   0.08368  \n",
      "7                   0.11510  \n",
      "8                   0.10720  \n",
      "9                   0.20750  \n",
      "10                  0.08452  \n",
      "11                  0.10480  \n",
      "12                  0.10230  \n",
      "13                  0.06287  \n",
      "14                  0.14310  \n",
      "15                  0.13410  \n",
      "16                  0.08216  \n",
      "17                  0.11420  \n",
      "18                  0.07615  \n",
      "19                  0.07259  \n",
      "20                  0.08183  \n",
      "21                  0.07773  \n",
      "22                  0.09946  \n",
      "23                  0.07526  \n",
      "24                  0.09564  \n",
      "25                  0.10590  \n",
      "26                  0.12750  \n",
      "27                  0.07421  \n",
      "28                  0.09876  \n",
      "29                  0.07919  \n",
      "30                  0.09782  \n",
      "31                  0.14020  \n",
      "32                  0.08482  \n",
      "33                  0.11230  \n",
      "34                  0.12330  \n",
      "35                  0.08633  \n",
      "36                  0.10140  \n",
      "37                  0.06169  \n",
      "38                  0.05504  \n",
      "39                  0.10710  \n",
      "40                  0.07146  \n",
      "41                  0.09606  \n",
      "42                  0.10380  \n",
      "43                  0.10270  \n",
      "44                  0.09618  \n",
      "45                  0.09185  \n",
      "46                  0.07409  \n",
      "47                  0.11790  \n",
      "48                  0.08301  \n",
      "49                  0.06917  \n",
      "50                  0.06563  \n",
      "51                  0.08025  \n",
      "52                  0.07408  \n",
      "53                  0.07987  \n",
      "54                  0.07873  \n",
      "\n",
      "[55 rows x 30 columns]\n",
      "     mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n",
      "455       13.380         30.72           86.34      557.2          0.09245   \n",
      "456       11.630         29.29           74.87      415.1          0.09357   \n",
      "457       13.210         25.25           84.10      537.9          0.08791   \n",
      "458       13.000         25.13           82.61      520.2          0.08369   \n",
      "459        9.755         28.20           61.68      290.9          0.07984   \n",
      "460       17.080         27.15          111.20      930.9          0.09898   \n",
      "461       27.420         26.27          186.90     2501.0          0.10840   \n",
      "462       14.400         26.99           92.25      646.1          0.06995   \n",
      "463       11.600         18.36           73.88      412.7          0.08508   \n",
      "464       13.170         18.22           84.28      537.3          0.07466   \n",
      "465       13.240         20.13           86.87      542.9          0.08284   \n",
      "466       13.140         20.74           85.98      536.9          0.08675   \n",
      "467        9.668         18.10           61.06      286.3          0.08311   \n",
      "468       17.600         23.33          119.00      980.5          0.09289   \n",
      "469       11.620         18.18           76.38      408.8          0.11750   \n",
      "470        9.667         18.49           61.49      289.1          0.08946   \n",
      "471       12.040         28.14           76.85      449.9          0.08752   \n",
      "472       14.920         14.93           96.45      686.9          0.08098   \n",
      "473       12.270         29.97           77.42      465.4          0.07699   \n",
      "474       10.880         15.62           70.41      358.9          0.10070   \n",
      "475       12.830         15.73           82.89      506.9          0.09040   \n",
      "476       14.200         20.53           92.41      618.4          0.08931   \n",
      "477       13.900         16.62           88.97      599.4          0.06828   \n",
      "478       11.490         14.59           73.99      404.9          0.10460   \n",
      "479       16.250         19.51          109.80      815.8          0.10260   \n",
      "480       12.160         18.03           78.29      455.3          0.09087   \n",
      "481       13.900         19.24           88.73      602.9          0.07991   \n",
      "482       13.470         14.06           87.32      546.3          0.10710   \n",
      "483       13.700         17.64           87.76      571.1          0.09950   \n",
      "484       15.730         11.28          102.80      747.2          0.10430   \n",
      "..           ...           ...             ...        ...              ...   \n",
      "539        7.691         25.44           48.34      170.4          0.08668   \n",
      "540       11.540         14.44           74.65      402.9          0.09984   \n",
      "541       14.470         24.99           95.81      656.4          0.08837   \n",
      "542       14.740         25.42           94.70      668.6          0.08275   \n",
      "543       13.210         28.06           84.88      538.4          0.08671   \n",
      "544       13.870         20.70           89.77      584.8          0.09578   \n",
      "545       13.620         23.23           87.19      573.2          0.09246   \n",
      "546       10.320         16.35           65.31      324.9          0.09434   \n",
      "547       10.260         16.58           65.85      320.8          0.08877   \n",
      "548        9.683         19.34           61.05      285.7          0.08491   \n",
      "549       10.820         24.21           68.89      361.6          0.08192   \n",
      "550       10.860         21.48           68.51      360.5          0.07431   \n",
      "551       11.130         22.44           71.49      378.4          0.09566   \n",
      "552       12.770         29.43           81.35      507.9          0.08276   \n",
      "553        9.333         21.94           59.01      264.0          0.09240   \n",
      "554       12.880         28.92           82.50      514.3          0.08123   \n",
      "555       10.290         27.61           65.67      321.4          0.09030   \n",
      "556       10.160         19.59           64.73      311.7          0.10030   \n",
      "557        9.423         27.88           59.26      271.3          0.08123   \n",
      "558       14.590         22.68           96.39      657.1          0.08473   \n",
      "559       11.510         23.93           74.52      403.5          0.09261   \n",
      "560       14.050         27.15           91.38      600.4          0.09929   \n",
      "561       11.200         29.37           70.67      386.0          0.07449   \n",
      "562       15.220         30.62          103.40      716.9          0.10480   \n",
      "563       20.920         25.09          143.00     1347.0          0.10990   \n",
      "564       21.560         22.39          142.00     1479.0          0.11100   \n",
      "565       20.130         28.25          131.20     1261.0          0.09780   \n",
      "566       16.600         28.08          108.30      858.1          0.08455   \n",
      "567       20.600         29.33          140.10     1265.0          0.11780   \n",
      "568        7.760         24.54           47.92      181.0          0.05263   \n",
      "\n",
      "     mean compactness  mean concavity  mean concave points  mean symmetry  \\\n",
      "455           0.07426        0.028190             0.032640         0.1375   \n",
      "456           0.08574        0.071600             0.020170         0.1799   \n",
      "457           0.05205        0.027720             0.020680         0.1619   \n",
      "458           0.05073        0.012060             0.017620         0.1667   \n",
      "459           0.04626        0.015410             0.010430         0.1621   \n",
      "460           0.11100        0.100700             0.064310         0.1793   \n",
      "461           0.19880        0.363500             0.168900         0.2061   \n",
      "462           0.05223        0.034760             0.017370         0.1707   \n",
      "463           0.05855        0.033670             0.017770         0.1516   \n",
      "464           0.05994        0.048590             0.028700         0.1454   \n",
      "465           0.12230        0.101000             0.028330         0.1601   \n",
      "466           0.10890        0.108500             0.035100         0.1562   \n",
      "467           0.05428        0.014790             0.005769         0.1680   \n",
      "468           0.20040        0.213600             0.100200         0.1696   \n",
      "469           0.14830        0.102000             0.055640         0.1957   \n",
      "470           0.06258        0.029480             0.015140         0.2238   \n",
      "471           0.06000        0.023670             0.023770         0.1854   \n",
      "472           0.08549        0.055390             0.032210         0.1687   \n",
      "473           0.03398        0.000000             0.000000         0.1701   \n",
      "474           0.10690        0.051150             0.015710         0.1861   \n",
      "475           0.08269        0.058350             0.030780         0.1705   \n",
      "476           0.11080        0.050630             0.030580         0.1506   \n",
      "477           0.05319        0.022240             0.013390         0.1813   \n",
      "478           0.08228        0.053080             0.019690         0.1779   \n",
      "479           0.18930        0.223600             0.091940         0.2151   \n",
      "480           0.07838        0.029160             0.015270         0.1464   \n",
      "481           0.05326        0.029950             0.020700         0.1579   \n",
      "482           0.11550        0.057860             0.052660         0.1779   \n",
      "483           0.07957        0.045480             0.031600         0.1732   \n",
      "484           0.12990        0.119100             0.062110         0.1784   \n",
      "..                ...             ...                  ...            ...   \n",
      "539           0.11990        0.092520             0.013640         0.2037   \n",
      "540           0.11200        0.067370             0.025940         0.1818   \n",
      "541           0.12300        0.100900             0.038900         0.1872   \n",
      "542           0.07214        0.041050             0.030270         0.1840   \n",
      "543           0.06877        0.029870             0.032750         0.1628   \n",
      "544           0.10180        0.036880             0.023690         0.1620   \n",
      "545           0.06747        0.029740             0.024430         0.1664   \n",
      "546           0.04994        0.010120             0.005495         0.1885   \n",
      "547           0.08066        0.043580             0.024380         0.1669   \n",
      "548           0.05030        0.023370             0.009615         0.1580   \n",
      "549           0.06602        0.015480             0.008160         0.1976   \n",
      "550           0.04227        0.000000             0.000000         0.1661   \n",
      "551           0.08194        0.048240             0.022570         0.2030   \n",
      "552           0.04234        0.019970             0.014990         0.1539   \n",
      "553           0.05605        0.039960             0.012820         0.1692   \n",
      "554           0.05824        0.061950             0.023430         0.1566   \n",
      "555           0.07658        0.059990             0.027380         0.1593   \n",
      "556           0.07504        0.005025             0.011160         0.1791   \n",
      "557           0.04971        0.000000             0.000000         0.1742   \n",
      "558           0.13300        0.102900             0.037360         0.1454   \n",
      "559           0.10210        0.111200             0.041050         0.1388   \n",
      "560           0.11260        0.044620             0.043040         0.1537   \n",
      "561           0.03558        0.000000             0.000000         0.1060   \n",
      "562           0.20870        0.255000             0.094290         0.2128   \n",
      "563           0.22360        0.317400             0.147400         0.2149   \n",
      "564           0.11590        0.243900             0.138900         0.1726   \n",
      "565           0.10340        0.144000             0.097910         0.1752   \n",
      "566           0.10230        0.092510             0.053020         0.1590   \n",
      "567           0.27700        0.351400             0.152000         0.2397   \n",
      "568           0.04362        0.000000             0.000000         0.1587   \n",
      "\n",
      "     mean fractal dimension           ...             worst radius  \\\n",
      "455                 0.06016           ...                   15.050   \n",
      "456                 0.06166           ...                   13.120   \n",
      "457                 0.05584           ...                   14.350   \n",
      "458                 0.05449           ...                   14.340   \n",
      "459                 0.05952           ...                   10.670   \n",
      "460                 0.06281           ...                   22.960   \n",
      "461                 0.05623           ...                   36.040   \n",
      "462                 0.05433           ...                   15.400   \n",
      "463                 0.05859           ...                   12.770   \n",
      "464                 0.05549           ...                   14.900   \n",
      "465                 0.06432           ...                   15.440   \n",
      "466                 0.06020           ...                   14.800   \n",
      "467                 0.06412           ...                   11.150   \n",
      "468                 0.07369           ...                   21.570   \n",
      "469                 0.07255           ...                   13.360   \n",
      "470                 0.06413           ...                   11.140   \n",
      "471                 0.05698           ...                   13.600   \n",
      "472                 0.05669           ...                   17.180   \n",
      "473                 0.05960           ...                   13.450   \n",
      "474                 0.06837           ...                   11.940   \n",
      "475                 0.05913           ...                   14.090   \n",
      "476                 0.06009           ...                   16.450   \n",
      "477                 0.05536           ...                   15.140   \n",
      "478                 0.06574           ...                   12.400   \n",
      "479                 0.06578           ...                   17.390   \n",
      "480                 0.06284           ...                   13.340   \n",
      "481                 0.05594           ...                   16.410   \n",
      "482                 0.06639           ...                   14.830   \n",
      "483                 0.06088           ...                   14.960   \n",
      "484                 0.06259           ...                   17.010   \n",
      "..                      ...           ...                      ...   \n",
      "539                 0.07751           ...                    8.678   \n",
      "540                 0.06782           ...                   12.260   \n",
      "541                 0.06341           ...                   16.220   \n",
      "542                 0.05680           ...                   16.510   \n",
      "543                 0.05781           ...                   14.370   \n",
      "544                 0.06688           ...                   15.050   \n",
      "545                 0.05801           ...                   15.350   \n",
      "546                 0.06201           ...                   11.250   \n",
      "547                 0.06714           ...                   10.830   \n",
      "548                 0.06235           ...                   10.930   \n",
      "549                 0.06328           ...                   13.030   \n",
      "550                 0.05948           ...                   11.660   \n",
      "551                 0.06552           ...                   12.020   \n",
      "552                 0.05637           ...                   13.870   \n",
      "553                 0.06576           ...                    9.845   \n",
      "554                 0.05708           ...                   13.890   \n",
      "555                 0.06127           ...                   10.840   \n",
      "556                 0.06331           ...                   10.650   \n",
      "557                 0.06059           ...                   10.490   \n",
      "558                 0.06147           ...                   15.480   \n",
      "559                 0.06570           ...                   12.480   \n",
      "560                 0.06171           ...                   15.300   \n",
      "561                 0.05502           ...                   11.920   \n",
      "562                 0.07152           ...                   17.520   \n",
      "563                 0.06879           ...                   24.290   \n",
      "564                 0.05623           ...                   25.450   \n",
      "565                 0.05533           ...                   23.690   \n",
      "566                 0.05648           ...                   18.980   \n",
      "567                 0.07016           ...                   25.740   \n",
      "568                 0.05884           ...                    9.456   \n",
      "\n",
      "     worst texture  worst perimeter  worst area  worst smoothness  \\\n",
      "455          41.61            96.69       705.6           0.11720   \n",
      "456          38.81            86.04       527.8           0.14060   \n",
      "457          34.23            91.29       632.9           0.12890   \n",
      "458          31.88            91.06       628.5           0.12180   \n",
      "459          36.92            68.03       349.9           0.11100   \n",
      "460          34.49           152.10      1648.0           0.16000   \n",
      "461          31.37           251.20      4254.0           0.13570   \n",
      "462          31.98           100.40       734.6           0.10170   \n",
      "463          24.02            82.68       495.1           0.13420   \n",
      "464          23.89            95.10       687.6           0.12820   \n",
      "465          25.50           115.00       733.5           0.12010   \n",
      "466          25.46           100.90       689.1           0.13510   \n",
      "467          24.62            71.11       380.2           0.13880   \n",
      "468          28.87           143.60      1437.0           0.12070   \n",
      "469          25.40            88.14       528.1           0.17800   \n",
      "470          25.62            70.88       385.2           0.12340   \n",
      "471          33.33            87.24       567.6           0.10410   \n",
      "472          18.22           112.00       906.6           0.10650   \n",
      "473          38.05            85.08       558.9           0.09422   \n",
      "474          19.35            80.78       433.1           0.13320   \n",
      "475          19.35            93.22       605.8           0.13260   \n",
      "476          27.26           112.10       828.5           0.11530   \n",
      "477          21.80           101.20       718.9           0.09384   \n",
      "478          21.90            82.04       467.6           0.13520   \n",
      "479          23.05           122.10       939.7           0.13770   \n",
      "480          27.87            88.83       547.4           0.12080   \n",
      "481          26.42           104.40       830.5           0.10640   \n",
      "482          18.32            94.94       660.2           0.13930   \n",
      "483          23.53            95.78       686.5           0.11990   \n",
      "484          14.20           112.50       854.3           0.15410   \n",
      "..             ...              ...         ...               ...   \n",
      "539          31.89            54.49       223.6           0.15960   \n",
      "540          19.68            78.78       457.8           0.13450   \n",
      "541          31.73           113.50       808.9           0.13400   \n",
      "542          32.29           107.40       826.4           0.10600   \n",
      "543          37.17            92.48       629.6           0.10720   \n",
      "544          24.75            99.17       688.6           0.12640   \n",
      "545          29.09            97.58       729.8           0.12160   \n",
      "546          21.77            71.12       384.9           0.12850   \n",
      "547          22.04            71.08       357.4           0.14610   \n",
      "548          25.59            69.10       364.2           0.11990   \n",
      "549          31.45            83.90       505.6           0.12040   \n",
      "550          24.77            74.08       412.3           0.10010   \n",
      "551          28.26            77.80       436.6           0.10870   \n",
      "552          36.00            88.10       594.7           0.12340   \n",
      "553          25.05            62.86       295.8           0.11030   \n",
      "554          35.74            88.84       595.7           0.12270   \n",
      "555          34.91            69.57       357.6           0.13840   \n",
      "556          22.88            67.88       347.3           0.12650   \n",
      "557          34.24            66.50       330.6           0.10730   \n",
      "558          27.27           105.90       733.5           0.10260   \n",
      "559          37.16            82.28       474.2           0.12980   \n",
      "560          33.17           100.20       706.7           0.12410   \n",
      "561          38.30            75.19       439.6           0.09267   \n",
      "562          42.79           128.70       915.0           0.14170   \n",
      "563          29.41           179.10      1819.0           0.14070   \n",
      "564          26.40           166.10      2027.0           0.14100   \n",
      "565          38.25           155.00      1731.0           0.11660   \n",
      "566          34.12           126.70      1124.0           0.11390   \n",
      "567          39.42           184.60      1821.0           0.16500   \n",
      "568          30.37            59.16       268.6           0.08996   \n",
      "\n",
      "     worst compactness  worst concavity  worst concave points  worst symmetry  \\\n",
      "455            0.14210          0.07003               0.07763          0.2196   \n",
      "456            0.20310          0.29230               0.06835          0.2884   \n",
      "457            0.10630          0.13900               0.06005          0.2444   \n",
      "458            0.10930          0.04462               0.05921          0.2306   \n",
      "459            0.11090          0.07190               0.04866          0.2321   \n",
      "460            0.24440          0.26390               0.15550          0.3010   \n",
      "461            0.42560          0.68330               0.26250          0.2641   \n",
      "462            0.14600          0.14720               0.05563          0.2345   \n",
      "463            0.18080          0.18600               0.08288          0.3210   \n",
      "464            0.19650          0.18760               0.10450          0.2235   \n",
      "465            0.56460          0.65560               0.13570          0.2845   \n",
      "466            0.35490          0.45040               0.11810          0.2563   \n",
      "467            0.12550          0.06409               0.02500          0.3057   \n",
      "468            0.47850          0.51650               0.19960          0.2301   \n",
      "469            0.28780          0.31860               0.14160          0.2660   \n",
      "470            0.15420          0.12770               0.06560          0.3174   \n",
      "471            0.09726          0.05524               0.05547          0.2404   \n",
      "472            0.27910          0.31510               0.11470          0.2688   \n",
      "473            0.05213          0.00000               0.00000          0.2409   \n",
      "474            0.38980          0.33650               0.07966          0.2581   \n",
      "475            0.26100          0.34760               0.09783          0.3006   \n",
      "476            0.34290          0.25120               0.13390          0.2534   \n",
      "477            0.20060          0.13840               0.06222          0.2679   \n",
      "478            0.20100          0.25960               0.07431          0.2941   \n",
      "479            0.44620          0.58970               0.17750          0.3318   \n",
      "480            0.22790          0.16200               0.05690          0.2406   \n",
      "481            0.14150          0.16730               0.08150          0.2356   \n",
      "482            0.24990          0.18480               0.13350          0.3227   \n",
      "483            0.13460          0.17420               0.09077          0.2518   \n",
      "484            0.29790          0.40040               0.14520          0.2557   \n",
      "..                 ...              ...                   ...             ...   \n",
      "539            0.30640          0.33930               0.05000          0.2790   \n",
      "540            0.21180          0.17970               0.06918          0.2329   \n",
      "541            0.42020          0.40400               0.12050          0.3187   \n",
      "542            0.13760          0.16110               0.10950          0.2722   \n",
      "543            0.13810          0.10620               0.07958          0.2473   \n",
      "544            0.20370          0.13770               0.06845          0.2249   \n",
      "545            0.15170          0.10490               0.07174          0.2642   \n",
      "546            0.08842          0.04384               0.02381          0.2681   \n",
      "547            0.22460          0.17830               0.08333          0.2691   \n",
      "548            0.09546          0.09350               0.03846          0.2552   \n",
      "549            0.16330          0.06194               0.03264          0.3059   \n",
      "550            0.07348          0.00000               0.00000          0.2458   \n",
      "551            0.17820          0.15640               0.06413          0.3169   \n",
      "552            0.10640          0.08653               0.06498          0.2407   \n",
      "553            0.08298          0.07993               0.02564          0.2435   \n",
      "554            0.16200          0.24390               0.06493          0.2372   \n",
      "555            0.17100          0.20000               0.09127          0.2226   \n",
      "556            0.12000          0.01005               0.02232          0.2262   \n",
      "557            0.07158          0.00000               0.00000          0.2475   \n",
      "558            0.31710          0.36620               0.11050          0.2258   \n",
      "559            0.25170          0.36300               0.09653          0.2112   \n",
      "560            0.22640          0.13260               0.10480          0.2250   \n",
      "561            0.05494          0.00000               0.00000          0.1566   \n",
      "562            0.79170          1.17000               0.23560          0.4089   \n",
      "563            0.41860          0.65990               0.25420          0.2929   \n",
      "564            0.21130          0.41070               0.22160          0.2060   \n",
      "565            0.19220          0.32150               0.16280          0.2572   \n",
      "566            0.30940          0.34030               0.14180          0.2218   \n",
      "567            0.86810          0.93870               0.26500          0.4087   \n",
      "568            0.06444          0.00000               0.00000          0.2871   \n",
      "\n",
      "     worst fractal dimension  \n",
      "455                  0.07675  \n",
      "456                  0.07220  \n",
      "457                  0.06788  \n",
      "458                  0.06291  \n",
      "459                  0.07211  \n",
      "460                  0.09060  \n",
      "461                  0.07427  \n",
      "462                  0.06464  \n",
      "463                  0.07863  \n",
      "464                  0.06925  \n",
      "465                  0.12490  \n",
      "466                  0.08174  \n",
      "467                  0.07875  \n",
      "468                  0.12240  \n",
      "469                  0.09270  \n",
      "470                  0.08524  \n",
      "471                  0.06639  \n",
      "472                  0.08273  \n",
      "473                  0.06743  \n",
      "474                  0.10800  \n",
      "475                  0.07802  \n",
      "476                  0.07858  \n",
      "477                  0.07698  \n",
      "478                  0.09180  \n",
      "479                  0.09136  \n",
      "480                  0.07729  \n",
      "481                  0.07603  \n",
      "482                  0.09326  \n",
      "483                  0.06960  \n",
      "484                  0.08181  \n",
      "..                       ...  \n",
      "539                  0.10660  \n",
      "540                  0.08134  \n",
      "541                  0.10230  \n",
      "542                  0.06956  \n",
      "543                  0.06443  \n",
      "544                  0.08492  \n",
      "545                  0.06953  \n",
      "546                  0.07399  \n",
      "547                  0.09479  \n",
      "548                  0.07920  \n",
      "549                  0.07626  \n",
      "550                  0.06592  \n",
      "551                  0.08032  \n",
      "552                  0.06484  \n",
      "553                  0.07393  \n",
      "554                  0.07242  \n",
      "555                  0.08283  \n",
      "556                  0.06742  \n",
      "557                  0.06969  \n",
      "558                  0.08004  \n",
      "559                  0.08732  \n",
      "560                  0.08321  \n",
      "561                  0.05905  \n",
      "562                  0.14090  \n",
      "563                  0.09873  \n",
      "564                  0.07115  \n",
      "565                  0.06637  \n",
      "566                  0.07820  \n",
      "567                  0.12400  \n",
      "568                  0.07039  \n",
      "\n",
      "[114 rows x 30 columns]\n"
     ]
    }
   ],
   "source": [
    "training_data = features[0:55]\n",
    "test_data = features[455:]\n",
    "#doing a 20 and 80 % split\n",
    "print(training_data)\n",
    "print(test_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import IsolationForest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "our_anomaly_detector = ensemble.IsolationForest(contamination = 0.01)\n",
    "#the isolation forest and many other algoritms are used for anomaly prediction\n",
    "# using 1% means we are only going to get alert on an abnomality that is 1% away from other datas\n",
    "# contamination - to get alert on every event"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\USER\\Anaconda3\\lib\\site-packages\\sklearn\\ensemble\\iforest.py:224: FutureWarning: behaviour=\"old\" is deprecated and will be removed in version 0.22. Please use behaviour=\"new\", which makes the decision_function change to match other anomaly detection algorithm API.\n",
      "  FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "IsolationForest(behaviour='old', bootstrap=False, contamination=0.01,\n",
       "        max_features=1.0, max_samples='auto', n_estimators=100,\n",
       "        n_jobs=None, random_state=None, verbose=0)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "our_anomaly_detector.fit(training_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\USER\\Anaconda3\\lib\\site-packages\\sklearn\\ensemble\\iforest.py:418: DeprecationWarning: threshold_ attribute is deprecated in 0.20 and will be removed in 0.22.\n",
      "  \" be removed in 0.22.\", DeprecationWarning)\n"
     ]
    }
   ],
   "source": [
    "traning_prediction =our_anomaly_detector.predict(training_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\USER\\Anaconda3\\lib\\site-packages\\sklearn\\ensemble\\iforest.py:224: FutureWarning: behaviour=\"old\" is deprecated and will be removed in version 0.22. Please use behaviour=\"new\", which makes the decision_function change to match other anomaly detection algorithm API.\n",
      "  FutureWarning)\n"
     ]
    }
   ],
   "source": [
    "test_prediction = our_anomaly_detector.fit(test_data)\n",
    "#for new datasets so that predictions can b made"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 1  1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n",
      "  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n",
      "  1  1  1  1  1  1  1]\n"
     ]
    }
   ],
   "source": [
    "print(traning_prediction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "IsolationForest(behaviour='old', bootstrap=False, contamination=0.01,\n",
      "        max_features=1.0, max_samples='auto', n_estimators=100,\n",
      "        n_jobs=None, random_state=None, verbose=0)\n"
     ]
    }
   ],
   "source": [
    "print(test_prediction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['mean radius' 'mean texture' 'mean perimeter' 'mean area'\n",
      " 'mean smoothness' 'mean compactness' 'mean concavity'\n",
      " 'mean concave points' 'mean symmetry' 'mean fractal dimension'\n",
      " 'radius error' 'texture error' 'perimeter error' 'area error'\n",
      " 'smoothness error' 'compactness error' 'concavity error'\n",
      " 'concave points error' 'symmetry error' 'fractal dimension error'\n",
      " 'worst radius' 'worst texture' 'worst perimeter' 'worst area'\n",
      " 'worst smoothness' 'worst compactness' 'worst concavity'\n",
      " 'worst concave points' 'worst symmetry' 'worst fractal dimension']\n"
     ]
    }
   ],
   "source": [
    "print(cancer_data.feature_names)\n",
    "#to check d columns we have"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "feature_selected = \"mean radius\"\n",
    "#lets pick d 1st column and plot the graph concirning it"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(55, 30)\n",
      "(55, 1)\n"
     ]
    }
   ],
   "source": [
    "training_targets = targets[0:55]\n",
    "test_targets = targets[455:]\n",
    "#doing a 20 and 80 % split\n",
    "print(training_data.shape)\n",
    "# to check out our data columns\n",
    "print(training_targets.shape)\n",
    "#to check if somebody has a dangerous cancer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0     17.990\n",
      "1     20.570\n",
      "2     19.690\n",
      "3     11.420\n",
      "4     20.290\n",
      "5     12.450\n",
      "6     18.250\n",
      "7     13.710\n",
      "8     13.000\n",
      "9     12.460\n",
      "10    16.020\n",
      "11    15.780\n",
      "12    19.170\n",
      "13    15.850\n",
      "14    13.730\n",
      "15    14.540\n",
      "16    14.680\n",
      "17    16.130\n",
      "18    19.810\n",
      "19    13.540\n",
      "20    13.080\n",
      "21     9.504\n",
      "22    15.340\n",
      "23    21.160\n",
      "24    16.650\n",
      "25    17.140\n",
      "26    14.580\n",
      "27    18.610\n",
      "28    15.300\n",
      "29    17.570\n",
      "30    18.630\n",
      "31    11.840\n",
      "32    17.020\n",
      "33    19.270\n",
      "34    16.130\n",
      "35    16.740\n",
      "36    14.250\n",
      "37    13.030\n",
      "38    14.990\n",
      "39    13.480\n",
      "40    13.440\n",
      "41    10.950\n",
      "42    19.070\n",
      "43    13.280\n",
      "44    13.170\n",
      "45    18.650\n",
      "46     8.196\n",
      "47    13.170\n",
      "48    12.050\n",
      "49    13.490\n",
      "50    11.760\n",
      "51    13.640\n",
      "52    11.940\n",
      "53    18.220\n",
      "54    15.100\n",
      "Name: mean radius, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "print(training_data[feature_selected])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "20.57\n"
     ]
    }
   ],
   "source": [
    "print(training_data[feature_selected][1])\n",
    "# to print a pertiular index on d mean radius table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0     0\n",
      "1     0\n",
      "2     0\n",
      "3     0\n",
      "4     0\n",
      "5     0\n",
      "6     0\n",
      "7     0\n",
      "8     0\n",
      "9     0\n",
      "10    0\n",
      "11    0\n",
      "12    0\n",
      "13    0\n",
      "14    0\n",
      "15    0\n",
      "16    0\n",
      "17    0\n",
      "18    0\n",
      "19    1\n",
      "20    1\n",
      "21    1\n",
      "22    0\n",
      "23    0\n",
      "24    0\n",
      "25    0\n",
      "26    0\n",
      "27    0\n",
      "28    0\n",
      "29    0\n",
      "30    0\n",
      "31    0\n",
      "32    0\n",
      "33    0\n",
      "34    0\n",
      "35    0\n",
      "36    0\n",
      "37    1\n",
      "38    0\n",
      "39    0\n",
      "40    0\n",
      "41    0\n",
      "42    0\n",
      "43    0\n",
      "44    0\n",
      "45    0\n",
      "46    1\n",
      "47    0\n",
      "48    1\n",
      "49    1\n",
      "50    1\n",
      "51    1\n",
      "52    1\n",
      "53    0\n",
      "54    0\n",
      "Name: 0, dtype: int32\n"
     ]
    }
   ],
   "source": [
    "print(training_targets[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n"
     ]
    }
   ],
   "source": [
    "print(training_targets[0][1])\n",
    "#to check  d zeros colums ist row"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "for training_index in range(len(training_data)):#for no\n",
    "    if traning_prediction[training_index] ==1:\n",
    "        plt.scatter(training_data[feature_selected][training_index],\n",
    "                   training_targets[0][training_index],c=\"blue\")\n",
    "    else:#for abnomality\n",
    "        plt.scatter(training_data[feature_selected][training_index],\n",
    "                  (training_targets[0][training_index]),c=\"red\",linewidths=10)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "list index out of range",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-35-af017ba2344c>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;32mfor\u001b[0m \u001b[0mtest_index\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtest_data\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      2\u001b[0m     \u001b[0mtest_index_adj\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mtest_index\u001b[0m\u001b[1;33m+\u001b[0m\u001b[1;36m455\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 3\u001b[1;33m     \u001b[1;32mif\u001b[0m \u001b[0mtest_prediction\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtest_index\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m==\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      4\u001b[0m         plt.scatter(test_data[feature_selected][test_index_adj],\n\u001b[0;32m      5\u001b[0m                    test_targets[0][test_index_adj],c=\"orange\")\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\sklearn\\ensemble\\base.py\u001b[0m in \u001b[0;36m__getitem__\u001b[1;34m(self, index)\u001b[0m\n\u001b[0;32m    142\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m__getitem__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    143\u001b[0m         \u001b[1;34m\"\"\"Returns the index'th estimator in the ensemble.\"\"\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 144\u001b[1;33m         \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mestimators_\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mindex\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    145\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    146\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m__iter__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mIndexError\u001b[0m: list index out of range"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "for test_index in range(len(test_data)):\n",
    "    test_index_adj = test_index+455\n",
    "    if test_prediction[test_index] ==1:\n",
    "        plt.scatter(test_data[feature_selected][test_index_adj],\n",
    "                   test_targets[0][test_index_adj],c=\"orange\")\n",
    "    else:\n",
    "        plt.scatter(test_data[feature_selected][test_index_adj],\n",
    "                   test_targets[0][test_index_adj],c=\"black\",linewidths=10)\n",
    "        \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "#the from here u can then use it and deploy from few lines of code"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
